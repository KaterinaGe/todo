{"version":3,"sources":["Edit.js","Task.js","Add.js","Filter.js","Pages.js","Error.js","App.js","index.js"],"names":["Edit","editText","setEdit","todo","useState","name","userEdit","setUserEdit","handleSubmit","e","preventDefault","uuid","done","handleEdit","currentTarget","value","key","trim","onSubmit","className","type","onBlur","onChange","onKeyDown","ref","input","focus","Task","removeTask","completeTodo","edit","checked","onDoubleClick","defaultValue","createdAt","slice","onClick","Add","addTask","filteredTodos","userInput","setUserInput","length","onKeyPress","placeholder","autoFocus","Filter","filterBy","order","setFilterBy","setOrder","Group","target","Button","Pages","TASK_PER_PAGE","total","paginate","prevPage","nextPage","currentPage","pageNumber","i","Math","ceil","push","map","number","href","Error","error","errorWindow","message","title","App","setFilteredTodos","setCurrentPage","setError","setMessage","useEffect","getTodos","a","axios","get","data","response","setTimeout","post","id","complete","patch","delete","filter","currentPageTodo","lastPage","firstPage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.92e867be.chunk.js","sourcesContent":["import {useState} from 'react'\nimport 'antd/dist/antd.css';\n\nfunction Edit({ editText, setEdit, todo }) {\n    const [userEdit, setUserEdit] = useState(todo.name)\n    \n    const handleSubmit = (e) => {\n        e.preventDefault()\n        editText(todo.uuid, userEdit, todo.done)\n        setEdit(false)\n    }\n    \n    const handleEdit = (e) => {\n        setUserEdit(e.currentTarget.value)\n        if(e.key === \"Enter\") {\n            e.preventDefault()\n            if(userEdit.trim() !== '') {                               \n                handleSubmit(e)\n            } \n        }\n        if(e.key === \"Escape\") {\n            setEdit(false)\n        }  \n    }\n\n    const handleBlur = () => {setEdit(false)}\n\n    return (\n        <form onSubmit={handleSubmit} className=\"enter\">\n            <input \n                value={userEdit}\n                type=\"text\"\n                onBlur={handleBlur}\n                onChange={handleEdit}\n                onKeyDown={handleEdit}\n                className=\"edit\"\n                ref={input => input && input.focus()}\n            /> \n        </form>\n    )\n}\n\nexport default Edit;","import Edit from \"./Edit\"\nimport { useState} from 'react'\nimport 'antd/dist/antd.css';\nimport { Checkbox, Button, Form } from 'antd'\n\nfunction Task({ todo, removeTask, completeTodo, editText }) {\n    const [edit, setEdit] = useState(false)\n\n    return (\n        <Form className=\"task\">\n            <Checkbox className=\"check\" todo={todo} onChange={ () => completeTodo(todo, todo.done, !todo.done) } checked={ todo.done }/>    \n            <div className=\"todo\" onDoubleClick={() => setEdit(true)}>\n                {edit ? <Edit todo={todo} defaultValue={todo.name} setEdit={setEdit} editText={editText} /> : todo.name}\n            </div>\n            <div>\n                {todo.createdAt.slice(0, 10)}\n            </div>\n            <Button className=\"remove\" onClick={() => removeTask(todo.uuid)}>\n                X\n            </Button>\n        </Form>\n    )\n}\n\nexport default Task","import {useState} from 'react'\nimport 'antd/dist/antd.css';\nimport { Input, Button } from 'antd'\n\nfunction Add({ addTask, filteredTodos }) {\n    const [userInput, setUserInput] = useState('')\n\n    const handleChange = (e) => {                \n        setUserInput(e.currentTarget.value)\n    }\n    \n    const handleSubmit = (e) => {\n        e.preventDefault()\n        if(userInput.trim() !== '') {                               \n            addTask(userInput)\n        } \n        setUserInput(\"\")\n    }\n\n    const keyPress = (e) => {\n        if(e.key === \"Enter\") {\n            handleSubmit(e)\n        }\n    }\n\n    return (\n        <section  className=\"enter\" onSubmit={(e) => handleSubmit(e)}>\n            <p className=\"sum\">{filteredTodos.length} tasks</p>\n            <Input \n                value={userInput}\n                type=\"text\"\n                onKeyPress={keyPress}\n                onChange={handleChange}\n                placeholder=\"I want to...\"\n                className=\"input\"\n                autoFocus\n                ref={input => input && input.focus()}\n            /> \n            <Button onClick={(e)=> handleSubmit(e)} className=\"save\">Add</Button>\n        </section>\n    )\n}\n\nexport default Add;","import 'antd/dist/antd.css';\nimport { Radio } from 'antd'\n\nfunction Filter ({filterBy, order, setFilterBy, setOrder }) {\n    return (\n        <div className=\"buttons\"> \n            <Radio.Group value={filterBy} onChange={(e) => setFilterBy(e.target.value)}>\n                <Radio.Button value=''>All</Radio.Button>\n                <Radio.Button value='done'>Done</Radio.Button> \n                <Radio.Button value='undone'>Undone</Radio.Button>       \n            </Radio.Group>\n            <p className=\"lettering\">\n                Sort by date\n            </p>\n            <Radio.Group value={order} onChange={(e) => setOrder(e.target.value)}>\n                <Radio.Button value='asc'> \\/ </Radio.Button>\n                <Radio.Button value='desc'> /\\ </Radio.Button>\n            </Radio.Group>\n        </div>\n    )\n}\n\nexport default Filter;","import 'antd/dist/antd.css';\nimport { Button, Form } from 'antd'\n\nfunction Pages ({TASK_PER_PAGE, total, paginate, prevPage, nextPage, currentPage}) {\n    const pageNumber = []\n\n    for (let i = 1; i <= Math.ceil(total/TASK_PER_PAGE); i++) {\n        pageNumber.push(i)\n    }\n\n    return (\n        <Form className=\"pages\">\n            <Button className=\"prevPage\" onClick={prevPage}> {'<<'} </Button>\n            <ul className=\"pagination\">\n                {pageNumber.map(number => (\n                    <li key={number}>\n                        <a href=\"!#\" \n                            className={currentPage === number ? \"pageSelected\" : \"page\"} \n                            onClick={() => paginate(number)}>\n                                {number}\n                        </a>\n                    </li>\n                ))}\n            </ul>\n            <Button className=\"nextPage\" onClick={nextPage}> {'>>'} </Button>\n        </Form>\n    )\n    \n}\n\nexport default Pages","import 'antd/dist/antd.css';\nimport { Card } from 'antd'\n\n\nfunction Error ({error, errorWindow, message}) {\n    if (!error) return null\n    return (\n        <Card title=\"Error!\" className=\"error\" onClick={errorWindow}>\n            {message}\n        </Card>\n    )    \n}\n\nexport default Error;","import React from \"react\";\nimport { useState, useEffect } from 'react';\nimport Task from \"./Task\";\nimport Add from \"./Add\";\nimport Filter from \"./Filter\"\nimport Pages from \"./Pages\";\nimport Error from \"./Error\";\nimport axios from \"axios\";\nimport 'antd/dist/antd.css';\n\n\nfunction App() {\n  const [filteredTodos, setFilteredTodos] = useState([])\n  const [filterBy, setFilterBy] = useState('')\n  const [order, setOrder] = useState('asc')\n  const TASK_PER_PAGE = 5\n  const [currentPage, setCurrentPage] = useState(1)\n  const [error, setError] = useState(false)\n  const [message, setMessage] = useState('')\n\n\n  useEffect (() => { \n    getTodos()\n  }, [ order, filterBy ])\n    \n  const getTodos = async() => {\n    try {\n      setCurrentPage(1)\n      const todo = await axios.get(`https://todo-api-learning.herokuapp.com/v1/tasks/2?filterBy=${filterBy}&order=${order}`)\n      setFilteredTodos(todo.data)\n    } catch (error) {\n      setMessage(error.response.data.message)\n      setError(true)\n      setTimeout(() => setError(false), 5000)\n    }\n  }\n\n  const addTask = async (userInput) => {\n    try{\n      setFilterBy('all')\n      setOrder('sortDown')\n      if (userInput) {\n        await axios.post('https://todo-api-learning.herokuapp.com/v1/task/2', {\n          name: userInput,\n          done: false\n        })\n        getTodos()\n      }\n    } catch(error) {\n      setMessage(error.response.data.message)\n      setError(true)\n      setTimeout(() => setError(false), 5000)\n    }\n  }\n\n  const editText = async (id, userEdit, complete) => {\n    try{\n      await axios.patch(`https://todo-api-learning.herokuapp.com/v1/task/2/${id}`, {\n        name: userEdit,\n        done: complete\n      })\n      getTodos()\n    } catch(error) {\n      setMessage(error.response.data.message)\n      setError(true)\n      setTimeout(() => setError(false), 5000)\n    }\n  }\n\n  const completeTodo = async (todo, complete ) => {\n    try {     \n      await axios.patch(`https://todo-api-learning.herokuapp.com/v1/task/2/${todo.uuid}`, {\n        done: !complete \n      })\n      getTodos()\n    } catch (error) {\n      setMessage(error.response.data.message)\n      setError(true)\n      setTimeout(() => setError(false), 5000)\n    } \n  }\n\n  const removeTask = async (id) => {\n    try {\n      await axios.delete(`https://todo-api-learning.herokuapp.com/v1/task/2/${id}`)\n      setFilteredTodos(filteredTodos.filter(todo => todo.uuid !== id))\n      if (currentPageTodo.length === 1) {\n        if (currentPage !== 1) {\n          setCurrentPage(currentPage - 1)\n        }\n      }\n    } catch(error) {\n      setMessage(error.response.data.message)\n      setError(true)\n      setTimeout(() => setError(false), 5000)\n    }\n  }\n\n  const lastPage = currentPage * TASK_PER_PAGE\n  const firstPage = lastPage - TASK_PER_PAGE\n  const currentPageTodo = filteredTodos.slice(firstPage, lastPage)\n\n  const paginate = pageNumber => setCurrentPage(pageNumber)\n\n  const nextPage = () => {\n    if (currentPage !== Math.ceil(filteredTodos.length / TASK_PER_PAGE))\n      setCurrentPage(currentPage + 1)\n  }\n  const prevPage = () => {\n    if (currentPage !== 1)\n      setCurrentPage(currentPage - 1)\n  }\n\n  const errorWindow = () => {\n    setError(false)\n  }\n\n  return (\n    <div className=\"app\">\n      <header>\n        <h1 className=\"h1\">ToDo</h1>\n      </header>       \n      <Add \n        className=\"add\" \n        addTask={addTask}\n        filteredTodos={filteredTodos}\n      />\n      <Filter\n        setOrder={setOrder}\n        setFilterBy={setFilterBy}\n        filterBy={filterBy}\n        order={order}\n      />\n      {currentPageTodo.map((todo, uuid) => {\n        return (\n          <Task\n            completeTodo={completeTodo}\n            todo={todo}\n            key={uuid}\n            removeTask={removeTask}\n            className=\"tasks\"\n            editText={editText}\n          />\n        )\n      })}\n      {filteredTodos.length > 5 &&\n        <Pages\n          currentPage={currentPage}\n          nextPage={nextPage}\n          prevPage={prevPage}\n          TASK_PER_PAGE={TASK_PER_PAGE}\n          total={filteredTodos.length}\n          paginate={paginate}\n        />}\n      <Error \n        error={error}\n        errorWindow={errorWindow}\n        message={message}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}